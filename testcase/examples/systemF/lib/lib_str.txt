isNothing_client: String-c->Bool = lam^c x: String. #primIsNothing_client (x);
isNothing_server: String-s->Bool = lam^s x: String. #primIsNothing_server (x);
fromJust_client: String-c->String = lam^c x: String. #primFromJust_client (x);
fromJust_server: String-s->String = lam^s x: String. #primFromJust_server (x);

toString_client: forall toStringTy_client. (toStringTy_client-c->String) = tylam toStringTy_client. lam^c x: toStringTy_client. #primToString_client (x);
toString_server: forall toStringTy_server. (toStringTy_server-s->String) = tylam toStringTy_server. lam^s x: toStringTy_server. #primToString_server (x);
toInt_client: String-c->Int = lam^c x: String. #primToInt_client (x);
toInt_server: String-s->Int = lam^s x: String. #primToInt_server (x);
toBool_client: String-c->Bool = lam^c x: String. #primToBool_client (x);
toBool_server: String-s->Bool = lam^s x: String. #primToBool_server (x);

reverse_client: String-c->String = lam^c x: String. #primReverse_client (x);
reverse_server: String-s->String = lam^s x: String. #primReverse_server (x);
append_client: String-c->String-c->String = lam^c x: String. lam^c y: String. #primAppend_client (x, y);
append_server: String-s->String-s->String = lam^s x: String. lam^s y: String. #primAppend_server (x, y);
length_client: String-c->Int = lam^c x: String. #primLength_client (x);
length_server: String-s->Int = lam^s x: String. #primLength_server (x);